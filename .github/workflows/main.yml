name: Python CI Workflow

on:
  push:
    branches:
      - dev

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Nécessaire pour les opérations Git qui nécessitent l'historique complet
          token: ${{ secrets.MY_PAT }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.0' 

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests with pytest
        id: pytest
        run: |
          pytest
          # envoie un message à discord pour informer si les tests ont réussi ou échoué
          if [ $? -eq 0 ]; then
            curl -X POST -H 'Content-type: application/json' --data '{"text":"The tests have passed. Commit: $GITHUB_SHA"}' ${{ secrets.DISCORD_WEBHOOK }}
          else
            curl -X POST -H 'Content-type: application/json' --data '{"text":"The tests have failed. Commit: $GITHUB_SHA"}' ${{ secrets.DISCORD_WEBHOOK }}
          fi
        continue-on-error: true # Permet au workflow de continuer même si cette étape échoue

      - name: Fast-forward dev onto main if tests pass
        if: success()
        run: |
          # envoie un message à discord pour informer que les tests ont réussi, avec le numéro de commit
          curl -X POST -H 'Content-type: application/json' --data '{"text":"The tests have passed. Commit: $GITHUB_SHA"}' ${{ secrets.DISCORD_WEBHOOK }}
          git fetch
          git checkout main
          git merge --ff-only origin/dev
          git push origin main
          # envoie un message à un canal Discord pour informer de la mise à jour
          curl -X POST -H 'Content-type: application/json' --data '{"text":"The dev branch has been fast-forwarded onto main. Commit $GITHUB_SHA"}' ${{ secrets.DISCORD_WEBHOOK }}

      - name: Create failure branch and reset dev if tests fail
        if: failure()
        run: |
          # envoie un message à discord pour informer que les tests ont échoué, avec le numéro de commit
          curl -X POST -H 'Content-type: application/json' --data '{"text":"The tests have failed. Commit: $GITHUB_SHA"}' ${{ secrets.DISCORD_WEBHOOK }}
          unique_branch_suffix=$(date +%s)
          git checkout -b failure/$unique_branch_suffix
          git push origin failure/$unique_branch_suffix
          
          git checkout dev
          git reset --hard HEAD~1
          git push origin dev --force
          # envoie un message à un canal Discord pour informer de la réinitialisation de la branche dev
          curl -X POST -H 'Content-type: application/json' --data '{"text":"The dev branch has been reset. Commit $GITHUB_SHA"}' ${{ secrets.DISCORD_WEBHOOK }}
