name: Test et Merge Automatique

on:
  push:
    branches:
      - dev

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      outcome: ${{ steps.test_outcome.outputs.outcome }}
    steps:
      - uses: actions/checkout@v2
      
      - name: Mise en place de Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      
      - name: Installation des dépendances
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Test avec pytest
        id: test_outcome
        run: pytest && echo "::set-output name=outcome::success" || echo "::set-output name=outcome::failure"

  merge-to-main-or-failure:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: dev
          fetch-depth: 0
      
      - name: Setup Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
      
      - name: Merge vers main ou failure
        uses: actions/github-script@v3
        with:
          script: |
            const outcome = '${{ needs.build-and-test.outputs.outcome }}';
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            if (outcome === 'success') {
              // Si les tests réussissent, merge 'dev' dans 'main'
              await github.rest.repos.merge({
                owner,
                repo,
                base: 'main',
                head: 'dev',
                commit_message: 'Automated merge of dev into main'
              });
              console.log('Merge into main was successful');
            } else {
              const failureBranch = 'failure-' + new Date().toISOString();
              // Si les tests échouent, créez une nouvelle branche failure
              await github.rest.git.createRef({
                owner,
                repo,
                ref: 'refs/heads/' + failureBranch,
                sha: context.sha
              });
              console.log(`Created failure branch: ${failureBranch}`);
            }
